{
	"cell_id" : 7475669417582050007,
	"cells" : 
	[
		{
			"cell_id" : 14460032633773371327,
			"cell_origin" : "client",
			"cell_type" : "latex",
			"cells" : 
			[
				{
					"cell_id" : 6945515026109599137,
					"cell_origin" : "client",
					"cell_type" : "latex_view",
					"source" : "\\section*{TT-gauge gravitational waves}\n\nWe start out by defining the values our indices will take on - here we work with spatial coordinates only, so our indices only have three values."
				}
			],
			"source" : "\\section*{Projection tensor properties}\n\nWe start out by defining the values our indices will take on - here we work with spatial coordinates only, so our indices only have three values."
		},
		{
			"cell_id" : 2047532696648678132,
			"cell_origin" : "client",
			"cell_type" : "input",
			"source" : "{i, j, k, l, m, n}::Indices(values={x,y,z}, position=fixed);\n{x, y, z}::Coordinate;\n{\\delta_{i j}}::KroneckerDelta;"
		},
		{
			"cell_id" : 7233440624557816844,
			"cell_origin" : "client",
			"cell_type" : "latex",
			"cells" : 
			[
				{
					"cell_id" : 4949466695421290159,
					"cell_origin" : "client",
					"cell_type" : "latex_view",
					"source" : "Now we define the vector $\\vec{n}$, which corresponds to the observation direction;\nthe values of the Kronecker delta (it seems to be a quirk in Cadabra that we have to do so);\nthe projection tensor for 1-vectors $P_{i j}$;\nthe projection tensor for 2-tensors $\\Lambda_{i j k l}$."
				}
			],
			"source" : "We can define the relevant quantities in a rather abstract way."
		},
		{
			"cell_id" : 11305690897488062001,
			"cell_origin" : "client",
			"cell_type" : "input",
			"source" : "delta_trace := \\delta_{i i} = 3;\n\nn_unit := n_i n_i = 1;\n\np_def := P_{i j} = \\delta_{i j} - n_i n_j;\n\nlambda_def := \\Lambda_{i j k l} = P_{i k} P_{j l} - 1 / 2 P_{i j} P_{k l};\n\nsubstitute(lambda_def, p_def);\n\n#lambda_def := {\\Lambda_{i j k l} = \n#\\delta_{i k} \\delta_{j l} - n_i n_k \\delta_{j l} \n#- \\delta_{i k} n_j n_l + \\frac{1}{2} n_{i} n_k n_j n_l \n#- \\frac{1}{2} \\delta_{i j} \\delta_{k l} \n#+ \\frac{1}{2} \\delta_{i j} n_k n_l + \\frac{1}{2} n_i n_j \\delta_{k l}};"
		},
		{
			"cell_id" : 7152727448209435426,
			"cell_origin" : "client",
			"cell_type" : "latex",
			"cells" : 
			[
				{
					"cell_id" : 10791211237068993466,
					"cell_origin" : "client",
					"cell_type" : "latex_view",
					"source" : "\\subsection*{Properties}"
				}
			],
			"source" : "\\subsection*{Properties}"
		},
		{
			"cell_id" : 12640081653111497722,
			"cell_origin" : "client",
			"cell_type" : "input",
			"source" : "p_symm := P_{i j} - P_{j i};\nsubstitute(p_symm, p_def);\ncanonicalise(p_symm);"
		},
		{
			"cell_id" : 7559743336643415101,
			"cell_origin" : "client",
			"cell_type" : "input",
			"source" : "p_transverse := n_{i} P_{i j};\nsubstitute(_, p_def);\ndistribute(_);\neliminate_kronecker(_);\nsubstitute(_, n_unit);"
		},
		{
			"cell_id" : 1300890694345455844,
			"cell_origin" : "client",
			"cell_type" : "input",
			"source" : "from cdb.core.manip import swap_sides\n\np_projector := P_{i k } P_{k j};\nsubstitute(_, p_def);\ndistribute(_);\neliminate_kronecker(_);\nsubstitute(_, n_unit);\nsubstitute(_, swap_sides(p_def));\n\nswap_sides(p_def),"
		},
		{
			"cell_id" : 2560986926480641721,
			"cell_origin" : "client",
			"cell_type" : "input",
			"source" : "p_trace := T = P_{k k};\nsubstitute(_, p_def);\neliminate_kronecker(_);\nsubstitute(_, n_unit);\nsubstitute(p_trace, delta_trace);\n\n# TODO! "
		},
		{
			"cell_id" : 15202158599640173309,
			"cell_origin" : "client",
			"cell_type" : "input",
			"source" : "from cdb.core.manip import swap_sides\n\nlambda_projector := \\Lambda_{i j m n} \\Lambda_{m n k l} - \\Lambda_{i j k l};\n\nsubstitute(_, lambda_def);\ndistribute(_),\neliminate_kronecker(_),\nsubstitute(_, n_unit),\nsubstitute(_, delta_trace),\ncollect_terms(_),\ncanonicalise(_),\nsort_sum(_),\nsubstitute(_, n_unit),\nsubstitute(_, delta_trace),\nsimplify(_),\nsort_product(_),\ncanonicalise(_);"
		},
		{
			"cell_id" : 805924756716846451,
			"cell_origin" : "client",
			"cell_type" : "input",
			"source" : "def process(ex):\n\tsubstitute(ex, lambda_def);\n\tdistribute(ex),\n\teliminate_kronecker(ex),\n\tsubstitute(ex, n_unit),\n\tcanonicalise(ex),\n\tsort_product(ex),\n\treturn(ex)\n\nlambda_transverse_1 := n_i \\Lambda_{i j k l};\nprocess(_);\n\nlambda_transverse_2 := n_j \\Lambda_{i j k l};\nprocess(_);\n\nlambda_transverse_3 := n_k \\Lambda_{i j k l};\nprocess(_);\n\nlambda_transverse_4 := n_l \\Lambda_{i j k l};\nprocess(_);\n"
		},
		{
			"cell_id" : 9863838202860138152,
			"cell_origin" : "client",
			"cell_type" : "input",
			"source" : "lambda_traceless_1 := \\Lambda_{i i k l};\nprocess(_),\nsubstitute(_, delta_trace);\n\nlambda_traceless_2 := \\Lambda_{i j k k};\nprocess(_),\nsubstitute(_, delta_trace);"
		},
		{
			"cell_id" : 8090259853317639714,
			"cell_origin" : "client",
			"cell_type" : "input",
			"source" : "lambda_swap_symmmetry := \\Lambda_{i j k l} - \\Lambda_{k l i j};\nsubstitute(_, lambda_def);\ndistribute(_),\ncanonicalise(_),\nsort_product(_);"
		},
		{
			"cell_id" : 4113571676669802490,
			"cell_origin" : "client",
			"cell_type" : "input",
			"source" : ""
		}
	],
	"description" : "Cadabra JSON notebook format",
	"version" : 1.0
}
